/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.sacco.gui;

import com.sacco.classes.Loan;
import java.sql.SQLException;
import javax.swing.JOptionPane;

/**
 *
 * @author Antony
 */
public class DisplayLoanInformation extends javax.swing.JInternalFrame {

    Loan _loan = new Loan();

    /**
     * Creates new form NewJInternalFrame
     */
    public DisplayLoanInformation() {
        initComponents();
        jTextAreaLoanInfo.setEditable(false);
        try {
            if (_loan.GetMemberLoanCount(3, false) == 0) {
                jLabel1.setText("You have not applied for any loans yet. Apply for one then the functions below will be available");
                HideElements(false);
            } else if (_loan.GetMemberLoanCount(0, true) == 1) {
                jLabel1.setText("You have a pending loan to pay. Please complete your payment in due time");
            } else {
                jLabel1.setText("Here is Your loan report");
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "SQL error caught", "Error", JOptionPane.ERROR_MESSAGE);
            this.dispose();
        }
    }

    private void HideElements(boolean hide) {
        //jPanel1.setVisible(hide);
        jButtonDisplay.setEnabled(hide);
        jCheckBoxAll.setEnabled(hide);
        jCheckBoxCleared.setEnabled(hide);
        jCheckBoxUncleared.setEnabled(hide);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonClose = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaLoanInfo = new javax.swing.JTextArea();
        jCheckBoxAll = new javax.swing.JCheckBox();
        jCheckBoxCleared = new javax.swing.JCheckBox();
        jCheckBoxUncleared = new javax.swing.JCheckBox();
        jButtonDisplay = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Loan Report");
        setToolTipText("");
        setDoubleBuffered(true);

        jButtonClose.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButtonClose.setText("Exit");
        jButtonClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCloseActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Here is Your overall Loan Report");

        jTextAreaLoanInfo.setColumns(20);
        jTextAreaLoanInfo.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jTextAreaLoanInfo.setRows(5);
        jScrollPane1.setViewportView(jTextAreaLoanInfo);

        jCheckBoxAll.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jCheckBoxAll.setText("All loans");

        jCheckBoxCleared.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jCheckBoxCleared.setText("Cleared loans");

        jCheckBoxUncleared.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jCheckBoxUncleared.setText("Uncleared loans");

        jButtonDisplay.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButtonDisplay.setText("Display Information");
        jButtonDisplay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDisplayActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBoxUncleared)
                    .addComponent(jCheckBoxCleared)
                    .addComponent(jCheckBoxAll)
                    .addComponent(jButtonDisplay))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 849, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jCheckBoxUncleared)
                        .addGap(31, 31, 31)
                        .addComponent(jCheckBoxCleared)
                        .addGap(35, 35, 35)
                        .addComponent(jCheckBoxAll)
                        .addGap(81, 81, 81)
                        .addComponent(jButtonDisplay))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 431, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonClose)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(186, 186, 186)
                        .addComponent(jLabel1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addComponent(jButtonClose)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonDisplayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDisplayActionPerformed
        // TODO add your handling code here:
        jTextAreaLoanInfo.setText("");
        // set the gender
        if (jCheckBoxCleared.isSelected()) {
            jCheckBoxAll.setSelected(false);
            jCheckBoxUncleared.setSelected(false);
            try {
                _loan.PrintLoanStatus(jTextAreaLoanInfo, 1, true, false);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "SQL error caught", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else if (jCheckBoxUncleared.isSelected()) {
            jCheckBoxAll.setSelected(false);
            jCheckBoxCleared.setSelected(false);
            try {
                _loan.PrintLoanStatus(jTextAreaLoanInfo, 0, true, false);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "SQL error caught", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            try {
                _loan.PrintLoanStatus(jTextAreaLoanInfo, 3, true, false);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "SQL error caught", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jButtonDisplayActionPerformed

    private void jButtonCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCloseActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButtonCloseActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonClose;
    private javax.swing.JButton jButtonDisplay;
    private javax.swing.JCheckBox jCheckBoxAll;
    private javax.swing.JCheckBox jCheckBoxCleared;
    private javax.swing.JCheckBox jCheckBoxUncleared;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextAreaLoanInfo;
    // End of variables declaration//GEN-END:variables
}
